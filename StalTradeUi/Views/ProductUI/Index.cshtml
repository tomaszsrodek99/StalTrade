@model IEnumerable<StalTradeAPI.Dtos.ProductDto>

@{
    ViewData["Title"] = "Products";
    Layout = "_UserLayout";
    var number = 1;
}

<div class="row">
    <h2 class="text-center">Produkty</h2>
    <div class="col-9">
        <div class="input-group search-input">
            <span class="input-group-text">
                <i class="fa-solid fa-magnifying-glass"></i>
            </span>
            <input class="form-control search-bar" type="text" id="searchInput" onkeyup="searchByName()" placeholder="Wyszukaj po numerze rysunku..">
        </div>
        <a class="btn btn-primary add-button" onclick="loadCreateProductForm()">Dodaj nowy produkt</a>
        @if (Model.Any())
        {
            <div class="text-center">
                <table id="search-table" class="table table-striped table-bordered table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th></th>
                            <th>
                                @Html.DisplayNameFor(model => model.CompanyDrawingNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CustomerDrawingNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UnitOfMeasure)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PurchaseVat)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SalesVat)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ConsumptionStandard)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Weight)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ChargeProfile)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MaterialGrade)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SubstituteGrade)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @(number).
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CompanyDrawingNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerDrawingNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UnitOfMeasure)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PurchaseVat)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SalesVat)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ConsumptionStandard)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Weight)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ChargeProfile)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MaterialGrade)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SubstituteGrade)
                                </td>
                                <td>
                                    <div class="btn-group" role="group" aria-label="Actions">
                                        <div class="btn-group" role="group">
                                            <a class="btn btn-secondary update-btn" onclick="loadUpdateProductForm(this)" data-item='@Json.Serialize(item)' style="margin-right: 5px;">Edytuj</a>
                                            @Html.ActionLink("Usuń", "RemoveProduct", "ProductUI", new { id = item.ProductId }, new { @class = "btn btn-danger", onclick = "return confirm('Czy na pewno chcesz usunąć rekord?');" })
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            number++;
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p>Brak danych do wyświetlenia.</p>
        }
    </div>
    <div id="partial-view" class="partial-view hidden col-3">
        @await Html.PartialAsync("CreateProduct", new StalTradeAPI.Dtos.ProductDto()),
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function checkUnique() {
            var companyDrawingNumber = $('#CompanyDrawingNumber').val();
            var productId = $('#ProductId').val();
            console.log(companyDrawingNumber);
            $.ajax({
                url: 'https://localhost:7279/api/Product/IsProductUnique/' + productId + '?companyDrawingNumber=' + encodeURIComponent(companyDrawingNumber),
                type: 'GET',
                success: function (result) {
                    if (!result) {
                        $('#uniqueProductError').text('Taki produkt już istnieje.');
                    } else {
                        $('#uniqueProductError').text('');
                    }
                }
            });
        }

        function loadCreateProductForm() {
            var form = document.getElementById("productForm");
            form.reset();
            document.getElementById("productForm").action = "AddProduct";
            var partialView = document.getElementById("partial-view");
            partialView.style.visibility = "visible";
            blur();
        }

        function loadUpdateProductForm(element) {
            var form = document.getElementById("productForm");
            form.reset();

            form.action = "PutCroduct";

            var itemData = element.getAttribute("data-item");
            var itemObject = JSON.parse(itemData);

            document.getElementById("ProductId").value = itemObject.productId;
            document.getElementById("Name").value = itemObject.name;
            document.getElementById("CompanyDrawingNumber").value = itemObject.companyDrawingNumber;
            document.getElementById("CustomerDrawingNumber").value = itemObject.customerDrawingNumber;
            document.getElementById("UnitOfMeasure").value = itemObject.unitOfMeasure;
            document.getElementById("PurchaseVat").value = itemObject.purchaseVat;
            document.getElementById("SalesVat").value = itemObject.salesVat;
            document.getElementById("ConsumptionStandard").value = itemObject.consumptionStandard;
            document.getElementById("Weight").value = itemObject.weight;
            document.getElementById("ChargeProfile").value = itemObject.chargeProfile;
            document.getElementById("MaterialGrade").value = itemObject.materialGrade;
            document.getElementById("SubstituteGrade").value = itemObject.substituteGrade;

            var partialView = document.getElementById("partial-view");
            partialView.style.visibility = "visible";
            blur();
        }
    </script>
}

