@model IEnumerable<StalTradeAPI.Dtos.ProductDto>
@{
    ViewData["Title"] = "Produkty";
    Layout = "_UserLayout";
}

<h2 class="text-center">Produkty</h2>
<div class="text-center">
    <div class="input-group search-input">
        <span class="input-group-text">
            <i class="fa-solid fa-magnifying-glass"></i>
        </span>
        <input class="form-control search-bar" type="text" id="searchInput" onkeyup="searchByName()" placeholder="Wyszukaj po nazwie produktu..">
        <div id="button-container">
            <button class="btn btn-primary" onclick="loadCreateProductForm()">Dodaj nowy produkt</button>
            <button id="edit-product-button" class="btn btn-secondary">Edytuj</button>
            <button id="delete-product-button" class="btn btn-danger">Usuń</button>
        </div>
    </div>
    @if (Model.Any())
    {
        <table id="search-table" class="display table table-striped table-bordered table-hover">
            <thead class="thead-dark">
                <tr>
                    <th hidden></th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.Name)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.CompanyDrawingNumber)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.CustomerDrawingNumber)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.UnitOfMeasure)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.PurchaseVat)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.SalesVat)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.ConsumptionStandard)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.Weight)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.ChargeProfile)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.MaterialGrade)</th>
                    <th>@Html.DisplayNameFor(modelItem => modelItem.SubstituteGrade)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td id="productId-@item.ProductId" hidden>
                            @Html.DisplayFor(modelItem => item.ProductId)
                        </td>
                        <td id="name-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td id="company-drawing-number-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.CompanyDrawingNumber)
                        </td>
                        <td id="customer-drawing-number-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.CustomerDrawingNumber)
                        </td>
                        <td id="unit-of-measuer-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.UnitOfMeasure)
                        </td>
                        <td id="purchase-vat-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.PurchaseVat)
                        </td>
                        <td id="sales-vat-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.SalesVat)
                        </td>
                        <td id="consumption-standard-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.ConsumptionStandard)
                        </td>
                        <td id="weight-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.Weight)
                        </td>
                        <td id="charge-profile-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.ChargeProfile)
                        </td>
                        <td id="material-grade-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.MaterialGrade)
                        </td>
                        <td id="substitute-grade-@item.ProductId" class="selectable-td">
                            @Html.DisplayFor(modelItem => item.SubstituteGrade)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>Brak produktów do wyświetlenia</p>
    }
</div>

<div id="partial-view" class="partial-view hidden">
    @await Html.PartialAsync("_CreateProduct", new StalTradeAPI.Dtos.ProductDto()),
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/product.js"></script>
    <script>
        var data = @Json.Serialize(Model);
    </script>
}


